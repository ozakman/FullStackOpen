{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","filterName","setFilterName","className","value","onChange","event","target","PersonForm","addName","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","type","Persons","persons","removePerson","filteredName","filter","person","name","toLowerCase","includes","length","map","key","number","onClick","baseUrl","axios","get","then","response","data","personObject","post","id","put","delete","Notification","message","errorMessage","console","log","App","useState","setPersons","setNewName","setNewNumber","setMessage","setErrorMessage","useEffect","personService","initialPersons","catch","error","setTimeout","preventDefault","alert","personName","find","window","confirm","returnedPerson","concat","p","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16c9c673.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({ filterName, setFilterName }) => {\r\n  \r\n  const filterPersons = (event) => {\r\n    setFilterName(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      filter shown with <input value={filterName} onChange={filterPersons} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter","import React from \"react\"\r\n\r\nconst PersonForm = ({ addName, newName, newNumber,handleNameChange,\r\n                      handleNumberChange }) => {\r\n  return (\r\n    <form onSubmit={addName}>\r\n      <div className=\"form\">\r\n        <label>      \r\n          name: <input value={newName} onChange={handleNameChange} /> \r\n        </label>     \r\n      </div>\r\n      <div>\r\n        <label>      \r\n          number: <input value={newNumber} onChange={handleNumberChange} />\r\n        </label>      \r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\n\r\nconst Persons = ({ persons, filterName, removePerson }) => {\r\n\r\nconst filteredName = persons.filter(person => person.name.toLowerCase().includes(filterName.toLowerCase()))\r\n\r\n  if(filteredName.length === 0){\r\n    return(\r\n      <p>not any match</p>\r\n    )\r\n  }\r\n  return filteredName.map(person => (\r\n      <div key={person.name}>{person.name} {person.number}{' '}\r\n        <button className=\"button\" value={person.name} onClick={() => removePerson(person)}>\r\n          {' '}delete{' '}\r\n        </button>\r\n      </div>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Persons","import axios from 'axios'\r\n\r\n//const baseUrl = 'http://localhost:3001/persons'\r\n\r\nconst baseUrl = 'http://localhost:3001/api/persons'\r\n\r\n\r\n/*\r\nMyös frontend toimii Herokussa olevan backendin avulla. Voit varmistaa \r\nasian muuttamalla frontendiin määritellyn backendin osoitteen viittaamaan \r\nhttp://localhost:3001:n sijaan Herokussa olevaan backendiin. Seuraavassa\r\nkokeillaan sitä:\r\n*/\r\n//const baseUrl = 'https://phonebookback-end.herokuapp.com/persons'\r\n\r\n/*\r\nEräs mahdollisuus frontendin tuotantoon viemiseen on kopioida tuotantokoodi, \r\neli hakemisto build backendin repositorion juureen ja määritellä backend \r\nnäyttämään pääsivunaan frontendin pääsivu, eli tiedosto build/index.html.\r\n\r\nKoska tässä tapauksessa sekä frontend että backend toimivat samassa osoitteessa, \r\nvoidaan React-sovelluksessa tapahtuva backendin baseUrl määritellä suhteellisena \r\nURL:ina, eli ilman palvelinta yksilöivää osaa, kuten: const baseUrl = '/persons'\r\n*/\r\n//const baseUrl = '/persons'\r\n\r\n//Backendin URL:it\r\n//Frontendin koodiin riittää seuraava muutos API:n lisäämisen kannalta\r\n//const baseUrl = '/api/persons'\r\n\r\n/*\r\n  const getAll = () => {\r\n    return axios.get(baseUrl)\r\n  }\r\n*/\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  \r\n  //return request.then(response => response.data)\r\n  //Written in perfect form, the last line would be:\r\n  return request.then(response => {\r\n    //console.log('RESPONSE DATA FROM BACK-END: ', response.data)\r\n    return response.data\r\n  })\r\n}\r\n\r\n/*const create = newObject => {\r\n  return axios.post(baseUrl, newObject)\r\n}*/\r\nconst create = personObject => {\r\n  //const request = axios.post(baseUrl, newObject)\r\n  const request = axios.post(baseUrl, personObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\n/*const update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject)\r\n}*/\r\nconst update = (id, personObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, personObject)\r\n  return request.then(response => response.data)\r\n}\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\n/*\r\nexport default { \r\n  getAll: getAll, \r\n  create: create, \r\n  update: update \r\n}\r\n*/\r\nexport default { getAll, create, update, remove }","import React from 'react'\r\n\r\n\r\nconst Notification = ({ message, errorMessage }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n  else if(message){\r\n    console.log('confirmationMessage is: ', message) \r\n    return (\r\n      <div className=\"confirmationMessage\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }else{\r\n    console.log('error message is: ', errorMessage)\r\n    return (\r\n      <div className=\"error\">\r\n        {errorMessage}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\n\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\n\nconst App = () => {\n\n  const[persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filterName, setFilterName] = useState('')\n  const [message, setMessage] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n\n  useEffect(() => {\n    /*\n    axios\n      .get('http://localhost:3001/persons')\n      .then(response => {\n        console.log('promise fulfilled')\n        setPersons(response.data)\n    */\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n      .catch(error => {\n        setErrorMessage(`No data could be retreived from the server`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n  }, [])\n  console.log('render', persons.length, 'persons')\n\n  const addName = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n \n    if(!newName || newName === ''){\n      return alert('Enter a name')\n    }\n\n    else if(!newNumber || newNumber === ''){\n      return alert('Enter a number. A name without a number can not be added to the phonebook!')\n    }\n    \n    const personName = persons.find(person => person.name.toLowerCase() === newName.toLowerCase())\n\n      if(personName && personName.number !== newNumber &&\n        window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n        ){\n                \n          personName.number = newNumber\n          personService\n            .update(personName.id, personName)\n            .then(response =>{\n              console.log('response is:', response)\n              setPersons(persons.map(person => person.personName !== personName ? person : response.data))\n              setNewName('')\n              setNewNumber('')\n\n              setMessage(\n                `The old number for '${personName.name}' is successfully replaced with the new number`\n              )\n              setTimeout(() => {\n                setMessage(null)\n              }, 5000)\n            })\n            .catch(error => {\n              setErrorMessage(\n                `Information of '${personName.name}' has already been removed from server`\n              )\n              setTimeout(() => {\n                setErrorMessage(null)\n              }, 5000)\n\n              setPersons(persons.filter(person => person.personName !== personName))\n            })\n      }  \n\n    else if(persons.find(person => person.name.toLowerCase() === newName.toLowerCase())){\n        alert(`${newName} is already added to phonebook`)\n    }\n    else{\n      /*\n      axios\n        .post('http://localhost:3001/persons', personObject)      \n        .then(response => {\n          console.log('promise fulfilled')\n          setPersons(persons.concat(response.data))\n        })    \n      setNewName('')\n      setNewNumber('')\n      */\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n\n          setMessage(\n            `${newName} with the number ${newNumber} is successfully added to the phonebook`\n          )\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n        /*\n        .catch(error => {\n          setErrorMessage(`Information of '${newName}' could not be added to the phonebook`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000) \n        })\n        */\n        \n        .catch(error => {\n          //lisätty 1.4.2022\n          //päästään käsiksi palvelimen palauttamaan virheilmoitusolioon näin\n          console.log(error.response.data)\n            setErrorMessage(`${error.response.data.error}`)\n            setTimeout(() => {\n              setErrorMessage(null)\n          }, 5000)            \n        })\n        \n    } \n}\n\n  const removePerson = (person) => {\n    if(window.confirm(`Delete ${person.name} with the id number ${person.id}?`)){\n      personService\n        .remove(person.id)\n        .then(() => {\n          setPersons(persons.filter(p => p.id !== person.id))\n          setMessage(\n            `${person.name} is successfully removed from the phonebook`\n          )\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n        .catch(error => {\n          setErrorMessage(`Information of '${person.name}' has already been removed from server`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n\n          personService\n            .getAll()\n            .then(initialPersons => {\n              setPersons(initialPersons)\n            })\n        })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={message} errorMessage={errorMessage} />\n\n      <Filter filterName={filterName} setFilterName={setFilterName} />\n\n      <h2>add a new</h2>\n      <PersonForm addName={addName} newName={newName} newNumber={newNumber}\n        handleNameChange={handleNameChange} handleNumberChange={handleNumberChange}\n      />\n\n      <h2>Numbers</h2>\n      <div>\n        <Persons persons={persons} filterName={filterName} removePerson={removePerson} />\n      </div>\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}